/* 
	William Brown
	CIS 310-01
	Assignment 9
	4/3/2017 
*/

CREATE TRIGGER trg_mem_balance ON DETAILRENTAL	--Creating trg_mem_balance on DETAILRENTAL table
AFTER UPDATE									--After an update is performed on DETAILRENTAL table
AS
BEGIN
	IF (EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted))	--What does this line exactly do???
	BEGIN
		DECLARE MYCURSOR CURSOR FOR											-- Declaration of MYCURSOR cursor
		SELECT	I.Rent_Num,
				I.Detail_DueDate,
				I.Detail_ReturnDate,
				I.Detail_DailyLateFee,
				D.Detail_DueDate,
				D.Detail_ReturnDate,
				D.Detail_DailyLateFee
		FROM inserted I
			INNER JOIN deleted D ON I.Rent_Num = D.Rent_Num AND I.Vid_Num = D.Vid_Num

		--Declration of variables to be used for trg_mem_balance
		DECLARE @RENT_NUM INT
		DECLARE @RETURNDATE_OLD DATETIME
		DECLARE @RETURNDATE_NEW DATETIME
		DECLARE @DUEDATE_OLD DATETIME
		DECLARE @DUEDATE_NEW DATETIME
		DECLARE @DAILY_LATEFEE_OLD DECIMAL(5,2)
		DECLARE @DAILY_LATEFEE_NEW DECIMAL(5,2)
		DECLARE @LATEFEE_BEFORE DECIMAL(5,2)
		DECLARE @LATEFEE_AFTER DECIMAL(5,2)
		DECLARE @DIFFERENCE DECIMAL(5,2)

	OPEN MYCURSOR
	FETCH NEXT FROM MYCURSOR INTO @RENT_NUM, @DUEDATE_NEW, @RETURNDATE_NEW, @DAILY_LATEFEE_NEW, @DUEDATE_OLD, @RETURNDATE_OLD, @DAILY_LATEFEE_OLD 

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		IF (@RETURNDATE_OLD > @DUEDATE_OLD)
			SELECT @LATEFEE_AFTER = DATEDIFF(Day, @DUEDATE_OLD, @RETURNDATE_OLD) * @DAILY_LATEFEE_OLD
		ELSE 
			SELECT @LATEFEE_BEFORE = 0

		IF (@RETURNDATE_NEW > @DUEDATE_NEW)
			SELECT @LATEFEE_AFTER = DATEDIFF(Day, @DUEDATE_NEW, @RETURNDATE_NEW) * @DAILY_LATEFEE_NEW
		ELSE 
			SELECT @LATEFEE_AFTER = 0

		SELECT @DIFFERENCE = @LATEFEE_AFTER - @LATEFEE_BEFORE

		IF (@DIFFERENCE <> 0)
		BEGIN
			DECLARE @MEM_NUM INT
			SELECT @MEM_NUM = M.Mem_Num
			FROM RENTAL R
				INNER JOIN MEMBERSHIP M ON R.Mem_Num = M.Mem_Num AND R.Rent_Num = @RENT_NUM

		UPDATE MEMBERSHIP
			SET Mem_Balance = Mem_Balance + @DIFFERENCE
			WHERE Mem_Num = @MEM_NUM
		END

	FETCH NEXT FROM MYCURSOR
	INTO @RENT_NUM, @RETURNDATE_OLD, @RETURNDATE_NEW, @DUEDATE_OLD, @DUEDATE_NEW, @DAILY_LATEFEE_OLD, @DAILY_LATEFEE_NEW
	END

CLOSE MYCURSOR
DEALLOCATE MYCURSOR
	END
END


--TEST CASE
UPDATE DETAILRENTAL
SET Detail_ReturnDate = SYSDATETIME()
WHERE Rent_Num = 1006 OR Rent_Num = 1007